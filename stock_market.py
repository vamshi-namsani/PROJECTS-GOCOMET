# -*- coding: utf-8 -*-
"""Stock market.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1sUQjQBG0R-SIbj1GHOsse4AAyD-1HYJf

# New Section
"""

import  math
import pandas_datareader as web
import numpy as np
import pandas as pd
from sklearn.preprocessing import MinMaxScaler
from keras.models import Sequential
from keras.layers import Dense,LSTM
import matplotlib.pyplot as plt
plt.style.use('fivethirtyeight')

import time
import datetime
import pandas as pd

ticker = input("")
period1 = int(time.mktime(datetime.datetime(2012, 1, 1, 23, 59).timetuple()))
period2 = int(time.mktime(datetime.datetime(2022, 1, 12, 23, 59).timetuple()))
interval = '1d' # 1d, 1m
x=ticker

query_string = f'https://query1.finance.yahoo.com/v7/finance/download/{ticker}?period1={period1}&period2={period2}&interval={interval}&events=history&includeAdjustedClose=true'

df = pd.read_csv(query_string)
# print(df)
df.to_csv('STOCK.csv')
df


df.shape

plt.figure(figsize=(18,8))
plt.title('close price history')
plt.plot(df['Close'])
plt.xlabel('Date',fontsize=18)
plt.ylabel('close price $',fontsize=18)
plt.show()

data =  df.filter(['Close'])
dataset = data.values
training_data_len = math.ceil(len(dataset)*.8)
training_data_len

scaler = MinMaxScaler(feature_range=(0,1))
scaled_data = scaler.fit_transform(dataset)
scaled_data

train_data = scaled_data[0:training_data_len,:]
x_train =[]
y_train =[]
for i in range(60,len(train_data)):
  x_train.append(train_data[i-60:i,0])
  y_train.append(train_data[i,0])
  if i<=60:
   print (x_train)
   print (y_train)


x_train,y_train =np.array(x_train),np.array(y_train)


x_train=np.reshape(x_train,(x_train.shape[0],x_train.shape[1],1))
x_train.shape


model = Sequential()
model.add(LSTM(50,return_sequences=True,input_shape=(x_train.shape[1],1)))
model.add(LSTM(50,return_sequences=False))
model.add(Dense(25))
model.add(Dense(1))

model.compile(optimizer='adam',loss='mean_squared_error')


model.fit(x_train,y_train,batch_size=1 , epochs=1)

test_data = scaled_data[training_data_len - 60: , :]
x_test =[]
y_test = dataset[training_data_len:, :]
for i in range(60,len(test_data)):
  x_test.append(test_data[i-60:i, 0])


x_test =np.array(x_test)

x_test = np.reshape(x_test,(x_test.shape[0],x_test.shape[1],1))

predictions = model.predict(x_test)
predictions = scaler.inverse_transform(predictions)


rmse =np.sqrt( np.mean(predictions-y_test)**2)
rmse

train =data[:training_data_len]
valid=data[training_data_len:]
valid['Predictions']=predictions
plt.figure(figsize=(16,8))
plt.title('Model')
plt.xlabel('date',fontsize=18)
plt.ylabel('close price $',fontsize=18)
plt.plot(train['Close'])
plt.plot(valid[['Close','Predictions']])
plt.legend(['train','value','Predictions'],loc='lower right')
plt.show()


valid

#Get the quote
import time
import datetime
import pandas as pd

ticker = x
period1 = int(time.mktime(datetime.datetime(2021, 11, 14, 23, 59).timetuple()))
period2 = int(time.mktime(datetime.datetime(2022, 1, 12, 23, 59).timetuple()))
interval = '1d' # 1d, 1m

qu_string = f'https://query1.finance.yahoo.com/v7/finance/download/{ticker}?period1={period1}&period2={period2}&interval={interval}&events=history&includeAdjustedClose=true'

apple_quote = pd.read_csv(qu_string)


#Create a new dataframe
new_df = apple_quote.filter(['Close'])
#Get teh last 60 day closing price values and convert the dataframe to an array
last_60_days = new_df[-60: ].values
#Scale the data to be values between 0 and 1
last_60_days_scaled = scaler.transform(last_60_days)
#Create an empty list
X_test = []
#Append teh past 60 days

X_test.append(last_60_days_scaled)
#Convert the X_test data set to a numpy array
X_test = np.array(x_test)
#Reshape the data
X_test = np.reshape (X_test, (X_test.shape[0], X_test. shape[1], 1))
#Get the predicted scaled price
guess_price = model.predict(X_test)
#undo the scaling
guess_price = scaler.inverse_transform(guess_price)
print(guess_price[-1])



